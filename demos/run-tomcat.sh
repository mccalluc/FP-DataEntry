#!/bin/bash

# This script is a self-contained demo of the FilteredPush Data Entry Plugin.
# It checks out FP-DataEntry into the current working directory, and builds a war file.
#
# For more information about FP-DataEntry, visit
# http://sourceforge.net/p/filteredpush/svn/HEAD/tree/trunk/FP-DataEntry/

if [ ! $CATALINA_BASE ];
then
	CATALINA_BASE=/var/lib/tomcat7;
fi

read -p "Is '$CATALINA_BASE' your tomcat directory, and is it ok to deploy there? [Y/N] " OK_TO_DEPLOY
if [ $OK_TO_DEPLOY != 'Y' -a $OK_TO_DEPLOY != 'y' ];
then
	echo 'Please "export CATALINA_BASE=something"'
	exit 1
fi

DEMOS=`dirname $0`
. $DEMOS/config-shell.sh
. $DEMOS/config-variables.sh
. $FILES_SCRIPT

# web.xml is svn-ignored: It will always be regenerated by the script. (I find this really ugly.)
cat >$CHECKOUT/src/main/webapp/WEB-INF/web.xml <<END
<web-app xmlns="http://java.sun.com/xml/ns/j2ee" version="2.4" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http:/java.sun.com/dtd/web-app_2_3.dtd">
	<servlet>
		<servlet-name>FP-DataEntry-servlet</servlet-name>
		<servlet-class>org.filteredpush.dataentry.servlet.BothEndsServlet</servlet-class>
		<init-param>
			<param-name>configFilePath</param-name>
			<param-value>$WORKSPACE/config.xml</param-value>
		</init-param>
	</servlet>
	<servlet-mapping>
		<servlet-name>FP-DataEntry-servlet</servlet-name>
		<url-pattern>/*</url-pattern>
		<!-- Without the '*' in url-pattern, getPathInfo will return null. -->
	</servlet-mapping>
</web-app>
END

if [ ! $REUSE ]
then
	mvn clean package assembly:single -Dmaven.test.skip=true -f $CHECKOUT/pom.xml
	mvn package -Dmaven.test.skip=true -f $CHECKOUT/pom-war.xml
fi

java -cp $JAR $FP.backend.solr.SolrInstaller $CONFIG
java -cp $JAR $FP.backend.solr.SolrIndexer $CONFIG

sudo chown tomcat7:tomcat7 -R $WORKSPACE
sudo cp $CHECKOUT/target/FP-DataEntry-war-1.0-SNAPSHOT.war $CATALINA_BASE/webapps/$NAME.war

echo "The plugin should be available at: http://localhost:8080/$NAME"
